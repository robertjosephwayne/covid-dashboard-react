{"version":3,"sources":["redux/ActiveCases/ActiveCases.actions.js","ActiveCases/components/ActiveCasesTableContainer/ActiveCasesTableContainer.js","App.js","reportWebVitals.js","redux/ActiveCases/ActiveCases.reducer.js","redux/ActiveCases/ActiveCases.epics.js","redux/root.reducer.js","redux/store.js","index.js"],"names":["fetchActiveCases","createAction","fetchActiveCasesSuccess","connect","state","activeCasesDaily","activeCases","dispatch","ActiveCasesActions","activeCasesDailyList","map","caseDataDaily","date","positive","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","createReducer","builder","addCase","action","payload","getActiveCasesDaily","response","epics","action$","pipe","ofType","mergeMap","ajax","rootEpic","store$","dependencies","combineEpics","catchError","error","source","console","rootReducer","combineReducers","activeCasesReducer","epicMiddleware","createEpicMiddleware","middleware","ReactDOM","render","store","configureStore","run","StrictMode","document","getElementById"],"mappings":"yPAEaA,EAAmBC,YAAa,sBAEhCC,EAA0BD,YACrC,8B,OCoBF,IAYeE,eANS,SAACC,GACvB,MAAO,CACLC,iBAAkBD,EAAME,YAAYD,qBARb,SAACE,GAC1B,MAAO,CACLP,iBAAkB,kBAAMO,EAASC,SAUtBL,EAjCf,YAA4E,IAAvCH,EAAsC,EAAtCA,iBAK7BS,EALmE,EAApBJ,iBAKPK,KAAI,SAACC,GACjD,OACE,wCACSA,EAAcC,KADvB,YACsCD,EAAcE,WADpD,sBAAwBF,EAAcC,UAM1C,OACE,gCACE,wBAAQE,QAdS,WACnBd,KAaE,gCACA,6BAAKS,UCTIM,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uCCYCQ,EAZCC,YAJK,CACnBrB,iBAAkB,KAGwB,SAACsB,GAC3CA,EAAQC,QACNpB,GACA,SAACJ,EAAOyB,GACN,OAAO,2BACFzB,GADL,IAEEC,iBAAkBwB,EAAOC,QAAQzB,yB,gCCOnC0B,EAAsB,SAACC,GAAD,OAAcA,EAASA,UCd7CC,EAAQ,CDDsB,SAACC,GAAD,OAClCA,EAAQC,KACNC,YAAO5B,GACP6B,aAAS,SAACR,GAAD,OACPS,YAAK,+DAA+DH,KAClEzB,aAAI,SAACsB,GACH,IAAM3B,EAAmB0B,EAAoBC,GAC7C,OAAOxB,EAA2C,CAChDH,+BCLCkC,EAAW,SAACL,EAASM,EAAQC,GAAlB,OACtBC,IAAY,WAAZ,EAAgBT,EAAhBS,CAAuBR,EAASM,EAAQC,GAAcN,KACpDQ,aAAW,SAACC,EAAOC,GAEjB,OADAC,QAAQF,MAAMA,GACPC,OAIAE,EAAcC,YAAgB,CACzC1C,YAAa2C,ICbTC,EAAiBC,cAEjBC,EAAa,CAACF,GCEpBG,IAASC,OACP,cAAC,IAAD,CAAUC,MDDG,WACb,IAAMA,EAAQC,YAAe,CAC3B/B,QAASsB,EACTK,eAKF,OAFAF,EAAeO,IAAIlB,GAEZgB,ECPUA,GAAjB,SACE,cAAC,IAAMG,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1B5C,M","file":"static/js/main.972623a8.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchActiveCases = createAction('ACTIVE_CASES_FETCH');\n\nexport const fetchActiveCasesSuccess = createAction(\n  'ACTIVE_CASES_FETCH_SUCCESS',\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as ActiveCasesActions from '../../../redux/ActiveCases/ActiveCases.actions';\n\nfunction ActiveCasesTableContainer({ fetchActiveCases, activeCasesDaily }) {\n  const handleSubmit = () => {\n    fetchActiveCases();\n  };\n\n  const activeCasesDailyList = activeCasesDaily.map((caseDataDaily) => {\n    return (\n      <li key={`daily-cases-${caseDataDaily.date}`}>\n        Date: {caseDataDaily.date}, Cases: {caseDataDaily.positive}\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <button onClick={handleSubmit}>Fetch Active Cases</button>\n      <ul>{activeCasesDailyList}</ul>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchActiveCases: () => dispatch(ActiveCasesActions.fetchActiveCases()),\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    activeCasesDaily: state.activeCases.activeCasesDaily,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ActiveCasesTableContainer);\n","import './App.css';\nimport ActiveCasesTableContainer from './ActiveCases/components/ActiveCasesTableContainer/ActiveCasesTableContainer';\n\nfunction App() {\n  return (\n    <div>\n      <ActiveCasesTableContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\nimport * as ActiveCasesActions from './ActiveCases.actions';\n\nconst initialState = {\n  activeCasesDaily: [],\n};\n\nconst reducer = createReducer(initialState, (builder) => {\n  builder.addCase(\n    ActiveCasesActions.fetchActiveCasesSuccess,\n    (state, action) => {\n      return {\n        ...state,\n        activeCasesDaily: action.payload.activeCasesDaily,\n      };\n    },\n  );\n});\n\nexport default reducer;\n","import { ofType } from 'redux-observable';\nimport { ajax } from 'rxjs/ajax';\nimport { map, mergeMap } from 'rxjs/operators';\nimport * as ActiveCasesActions from './ActiveCases.actions';\n\nexport const fetchActiveCasesEpic = (action$) =>\n  action$.pipe(\n    ofType(ActiveCasesActions.fetchActiveCases),\n    mergeMap((action) =>\n      ajax('https://covid-dashboard-api-nest.herokuapp.com/active-cases').pipe(\n        map((response) => {\n          const activeCasesDaily = getActiveCasesDaily(response);\n          return ActiveCasesActions.fetchActiveCasesSuccess({\n            activeCasesDaily,\n          });\n        }),\n      ),\n    ),\n  );\n\nconst getActiveCasesDaily = (response) => response.response;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { combineEpics } from 'redux-observable';\nimport { catchError } from 'rxjs/operators';\nimport activeCasesReducer from './ActiveCases/ActiveCases.reducer';\nimport { fetchActiveCasesEpic } from './ActiveCases/ActiveCases.epics';\n\nconst epics = [fetchActiveCasesEpic];\n\nexport const rootEpic = (action$, store$, dependencies) =>\n  combineEpics(...epics)(action$, store$, dependencies).pipe(\n    catchError((error, source) => {\n      console.error(error);\n      return source;\n    }),\n  );\n\nexport const rootReducer = combineReducers({\n  activeCases: activeCasesReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic, rootReducer } from './root.reducer';\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst middleware = [epicMiddleware];\n\nexport default function initializeStore() {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware,\n  });\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store()}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}