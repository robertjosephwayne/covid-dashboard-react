{"version":3,"sources":["redux/ActiveCases/ActiveCases.actions.js","components/ActiveCasesTable/ActiveCasesTableContainer.js","components/DailyCharts/ChartDatePicker.js","components/DailyCharts/DailyChartsContainer.js","components/TopAppBar/TopAppBarTitle.js","components/TopAppBar/TopAppBar.js","App.js","reportWebVitals.js","redux/ActiveCases/ActiveCases.reducer.js","redux/ActiveCases/ActiveCases.epics.js","redux/root.reducer.js","redux/store.js","index.js"],"names":["fetchActiveCases","createAction","fetchActiveCasesSuccess","connect","state","activeCasesDaily","activeCases","dispatch","ActiveCasesActions","data","React","useMemo","map","caseDataDaily","year","month","day","positive","negative","pending","hospitalized","hospitalizedCurrently","inIcuCurrently","onVentilatorCurrently","deaths","totalTestResults","positiveIncrease","deathIncrease","hospitalizedIncrease","totalTestResultsIncrease","columns","Header","accessor","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useEffect","console","log","className","onClick","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","ChartDatePicker","label","selectedDate","onChange","utils","DateFnsUtils","Grid","container","justify","margin","format","value","KeyboardButtonProps","theme","createMuiTheme","palette","primary","main","green","useState","chartTitle","setChartTitle","chartDataKey","setChartDataKey","Date","startDate","setStartDate","endDate","setEndDate","firstDay","date","lastDay","length","changeData","title","dataKey","toLocaleDateString","death","filter","ThemeProvider","ResponsiveContainer","width","height","LineChart","Line","type","stroke","dot","XAxis","Tooltip","formatter","name","props","number","Intl","NumberFormat","event","TopAppBarTitle","TopAppBar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","createReducer","builder","addCase","action","payload","getActiveCasesDaily","response","dailyData","toString","slice","epics","action$","pipe","ofType","mergeMap","ajax","rootEpic","store$","dependencies","combineEpics","catchError","error","source","rootReducer","combineReducers","activeCasesReducer","epicMiddleware","createEpicMiddleware","middleware","ReactDOM","store","configureStore","run","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b3f6d3d.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchActiveCases = createAction('ACTIVE_CASES_FETCH');\n\nexport const fetchActiveCasesSuccess = createAction(\n  'ACTIVE_CASES_FETCH_SUCCESS',\n);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useTable } from 'react-table';\nimport * as ActiveCasesActions from '../../redux/ActiveCases/ActiveCases.actions';\n\nfunction ActiveCasesTableContainer({ fetchActiveCases, activeCasesDaily }) {\n  const handleSubmit = () => {\n    fetchActiveCases();\n  };\n\n  const data = React.useMemo(\n    () =>\n      activeCasesDaily.map((caseDataDaily) => ({\n        year: caseDataDaily.year,\n        month: caseDataDaily.month,\n        day: caseDataDaily.day,\n        positive: caseDataDaily.positive,\n        negative: caseDataDaily.negative,\n        pending: caseDataDaily.pending,\n        hospitalized: caseDataDaily.hospitalizedCurrently,\n        inIcuCurrently: caseDataDaily.inIcuCurrently,\n        onVentilatorCurrently: caseDataDaily.onVentilatorCurrently,\n        deaths: caseDataDaily.deaths,\n        totalTestResults: caseDataDaily.totalTestResults,\n        positiveIncrease: caseDataDaily.positiveIncrease,\n        deathIncrease: caseDataDaily.deathIncrease,\n        hospitalizedIncrease: caseDataDaily.hospitalizedIncrease,\n        totalTestResultsIncrease: caseDataDaily.totalTestResultsIncrease,\n      })),\n    [activeCasesDaily],\n  );\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Year',\n        accessor: 'year',\n      },\n      {\n        Header: 'Month',\n        accessor: 'month',\n      },\n      {\n        Header: 'Day',\n        accessor: 'day',\n      },\n      {\n        Header: 'Positive',\n        accessor: 'positive',\n      },\n      {\n        Header: 'Negative',\n        accessor: 'negative',\n      },\n      {\n        Header: 'Pending',\n        accessor: 'pending',\n      },\n      {\n        Header: 'Hospitalized',\n        accessor: 'hospitalizedCurrently',\n      },\n      {\n        Header: 'ICU',\n        accessor: 'inIcuCurrently',\n      },\n      {\n        Header: 'Ventilator',\n        accessor: 'onVentilatorCurrently',\n      },\n      {\n        Header: 'Deaths',\n        accessor: 'deaths',\n      },\n      {\n        Header: 'Test Results',\n        accessor: 'totalTestResults',\n      },\n      {\n        Header: 'Positive Increase',\n        accessor: 'positiveIncrease',\n      },\n      {\n        Header: 'Death Increase',\n        accessor: 'deathIncrease',\n      },\n      {\n        Header: 'Hospitalized Increase',\n        accessor: 'hospitalizedIncrease',\n      },\n      {\n        Header: 'Test Results Increase',\n        accessor: 'totalTestResultsIncrease',\n      },\n    ],\n    [],\n  );\n\n  const tableInstance = useTable({ columns, data });\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance;\n\n  useEffect(() => {\n    console.log('useEffect: fetching active cases');\n    fetchActiveCases();\n  }, [fetchActiveCases]);\n\n  return (\n    <div className=\"flex flex-col\">\n      <button onClick={handleSubmit}>Fetch Active Cases</button>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchActiveCases: () => dispatch(ActiveCasesActions.fetchActiveCases()),\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    activeCasesDaily: state.activeCases.activeCasesDaily,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ActiveCasesTableContainer);\n","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst ChartDatePicker = ({ label, selectedDate, onChange }) => {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n        <KeyboardDatePicker\n          margin=\"normal\"\n          label={label}\n          format=\"MM/dd/yyyy\"\n          value={selectedDate}\n          onChange={onChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n};\n\nexport default ChartDatePicker;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { connect } from 'react-redux';\nimport * as ActiveCasesActions from '../../redux/ActiveCases/ActiveCases.actions';\nimport { LineChart, Line, XAxis, ResponsiveContainer, Tooltip } from 'recharts';\nimport ChartDatePicker from './ChartDatePicker';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: green[800],\n    },\n  },\n});\n\nfunction DailyChartsContainer({ fetchActiveCases, activeCasesDaily }) {\n  const [chartTitle, setChartTitle] = useState('Positive Cases');\n  const [chartDataKey, setChartDataKey] = useState('positive');\n  const [startDate, setStartDate] = useState(new Date(2020, 1, 1));\n  const [endDate, setEndDate] = useState(new Date(2021, 12, 31));\n\n  useEffect(() => {\n    console.log('useEffect: fetching active cases');\n    fetchActiveCases();\n  }, [fetchActiveCases]);\n\n  useEffect(() => {\n    const firstDay = activeCasesDaily[0];\n    if (firstDay?.date) {\n      setStartDate(firstDay.date);\n    }\n  }, [activeCasesDaily]);\n\n  useEffect(() => {\n    const lastDay = activeCasesDaily[activeCasesDaily.length - 1];\n    if (lastDay?.date) {\n      setEndDate(lastDay.date);\n    }\n  }, [activeCasesDaily]);\n\n  const formatDate = (date) => date?.toLocaleDateString() || '';\n\n  const formatTooltipNumber = (number) =>\n    Intl.NumberFormat('en').format(number);\n\n  const formatTooltip = (value, name, props) => {\n    return formatTooltipNumber(value);\n  };\n\n  const changeData = (title, dataKey) => {\n    setChartTitle(title);\n    setChartDataKey(dataKey);\n  };\n\n  const handleStartDateChange = (event) => {\n    console.log(event);\n    setStartDate(event);\n  };\n\n  const handleEndDateChange = (event) => {\n    console.log(event);\n    setEndDate(event);\n  };\n\n  const data = useMemo(() => {\n    console.log('test');\n    return activeCasesDaily\n      .map((caseDataDaily) => ({\n        date: formatDate(caseDataDaily.date),\n        year: caseDataDaily.year,\n        month: caseDataDaily.month,\n        day: caseDataDaily.day,\n        positive: caseDataDaily.positive,\n        negative: caseDataDaily.negative,\n        pending: caseDataDaily.pending,\n        hospitalized: caseDataDaily.hospitalizedCurrently,\n        inIcuCurrently: caseDataDaily.inIcuCurrently,\n        onVentilatorCurrently: caseDataDaily.onVentilatorCurrently,\n        death: caseDataDaily.death,\n        totalTestResults: caseDataDaily.totalTestResults,\n        positiveIncrease: caseDataDaily.positiveIncrease,\n        deathIncrease: caseDataDaily.deathIncrease,\n        hospitalizedIncrease: caseDataDaily.hospitalizedIncrease,\n        totalTestResultsIncrease: caseDataDaily.totalTestResultsIncrease,\n      }))\n      .filter((caseDataDaily) => {\n        return (\n          new Date(caseDataDaily.date) >= new Date(startDate) &&\n          new Date(caseDataDaily.date) <= new Date(endDate)\n        );\n      });\n  }, [activeCasesDaily, startDate, endDate]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"flex flex-col items-center w-full h-full\">\n        <h1 className=\"mb-6 text-xl font-bold text-center\">{chartTitle}</h1>\n        <ResponsiveContainer width=\"80%\" height={375}>\n          <LineChart data={data}>\n            <Line\n              type=\"monotone\"\n              dataKey={chartDataKey}\n              stroke=\"#8884d8\"\n              dot={false}\n            />\n            <XAxis dataKey=\"date\" />\n            <Tooltip formatter={formatTooltip} />\n          </LineChart>\n        </ResponsiveContainer>\n\n        <div className=\"flex items-center space-x-4\">\n          <ChartDatePicker\n            onChange={handleStartDateChange}\n            label=\"Start Date\"\n            selectedDate={startDate}\n          />\n          <ChartDatePicker\n            onChange={handleEndDateChange}\n            label=\"End Date\"\n            selectedDate={endDate}\n          />\n        </div>\n\n        <div className=\"flex items-center my-4 mb-4 space-x-4\">\n          <button\n            className=\"focus:outline-none\"\n            onClick={() =>\n              changeData('Total Test Results', 'totalTestResults')\n            }>\n            Tests\n          </button>\n          <button\n            className=\"focus:outline-none\"\n            onClick={() => changeData('Positive Cases', 'positive')}>\n            Positive\n          </button>\n          <button\n            className=\"focus:outline-none\"\n            onClick={() => changeData('Negative Cases', 'negative')}>\n            Negative\n          </button>\n          <button\n            className=\"focus:outline-none\"\n            onClick={() => changeData('Pending Tests', 'pending')}>\n            Pending\n          </button>\n          <button\n            className=\"focus:outline-none\"\n            onClick={() => changeData('Currently in ICU', 'inIcuCurrently')}>\n            ICU\n          </button>\n          <button\n            className=\"focus:outline-none\"\n            onClick={() => changeData('Hospitalized', 'hospitalized')}>\n            Hospitalized\n          </button>\n          <button\n            className=\"focus:outline-none\"\n            onClick={() =>\n              changeData('Currently on Ventilator', 'onVentilatorCurrently')\n            }>\n            Ventilators\n          </button>\n          <button\n            className=\"focus:outline-none\"\n            onClick={() => changeData('Deaths', 'death')}>\n            Deaths\n          </button>\n        </div>\n        <div className=\"flex items-center mb-4 space-x-4\">\n          <button\n            className=\"focus:outline-none\"\n            onClick={() => changeData('Positive Increase', 'positiveIncrease')}>\n            Positive Increase\n          </button>\n          <button\n            className=\"focus:outline-none\"\n            onClick={() => changeData('Death Increase', 'deathIncrease')}>\n            Death Increase\n          </button>\n          <button\n            className=\"focus:outline-none\"\n            onClick={() =>\n              changeData('Hospitalized Increase', 'hospitalizedIncrease')\n            }>\n            Hospitalized Increase\n          </button>\n          <button\n            className=\"focus:outline-none\"\n            onClick={() =>\n              changeData(\n                'Total Test Results Increase',\n                'totalTestResultsIncrease',\n              )\n            }>\n            Test Increase\n          </button>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchActiveCases: () => dispatch(ActiveCasesActions.fetchActiveCases()),\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    activeCasesDaily: state.activeCases.activeCasesDaily,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DailyChartsContainer);\n","const TopAppBarTitle = ({ title }) => {\n  return <h1 className=\"text-2xl font-bold text-purple-700\">{title}</h1>;\n};\n\nexport default TopAppBarTitle;\n","import TopAppBarTitle from './TopAppBarTitle';\n\nconst TopAppBar = ({ title }) => {\n  return (\n    <div className=\"flex items-center h-16 px-8 py-4 text-lg\">\n      <TopAppBarTitle title={title}></TopAppBarTitle>\n    </div>\n  );\n};\n\nexport default TopAppBar;\n","import './App.css';\nimport ActiveCasesTableContainer from './components/ActiveCasesTable/ActiveCasesTableContainer';\nimport DailyChartsContainer from './components/DailyCharts/DailyChartsContainer';\nimport TopAppBar from './components/TopAppBar/TopAppBar';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"flex flex-col h-screen\">\n        <TopAppBar title=\"Covid Dashboard\" />\n        <div className=\"flex-grow mt-2\">\n          <DailyChartsContainer />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\nimport * as ActiveCasesActions from './ActiveCases.actions';\n\nconst initialState = {\n  activeCasesDaily: [],\n};\n\nconst reducer = createReducer(initialState, (builder) => {\n  builder.addCase(\n    ActiveCasesActions.fetchActiveCasesSuccess,\n    (state, action) => {\n      return {\n        ...state,\n        activeCasesDaily: action.payload.activeCasesDaily,\n      };\n    },\n  );\n});\n\nexport default reducer;\n","import { ofType } from 'redux-observable';\nimport { ajax } from 'rxjs/ajax';\nimport { map, mergeMap } from 'rxjs/operators';\nimport * as ActiveCasesActions from './ActiveCases.actions';\n\nexport const fetchActiveCasesEpic = (action$) =>\n  action$.pipe(\n    ofType(ActiveCasesActions.fetchActiveCases),\n    mergeMap((action) =>\n      ajax('https://covid-dashboard-api-nest.herokuapp.com/active-cases').pipe(\n        map((response) => {\n          const activeCasesDaily = getActiveCasesDaily(response);\n          return ActiveCasesActions.fetchActiveCasesSuccess({\n            activeCasesDaily,\n          });\n        }),\n      ),\n    ),\n  );\n\nconst getActiveCasesDaily = (response) => {\n  return response.response.map((dailyData) => {\n    const date = dailyData.date.toString();\n    const year = +date.slice(0, 4);\n    const month = +date.slice(4, 6);\n    const day = +date.slice(6, 8);\n    return {\n      ...dailyData,\n      year,\n      month,\n      day,\n      date: new Date(year, month, day),\n    };\n  });\n};\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { combineEpics } from 'redux-observable';\nimport { catchError } from 'rxjs/operators';\nimport activeCasesReducer from './ActiveCases/ActiveCases.reducer';\nimport { fetchActiveCasesEpic } from './ActiveCases/ActiveCases.epics';\n\nconst epics = [fetchActiveCasesEpic];\n\nexport const rootEpic = (action$, store$, dependencies) =>\n  combineEpics(...epics)(action$, store$, dependencies).pipe(\n    catchError((error, source) => {\n      console.error(error);\n      return source;\n    }),\n  );\n\nexport const rootReducer = combineReducers({\n  activeCases: activeCasesReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { rootEpic, rootReducer } from './root.reducer';\n\nconst epicMiddleware = createEpicMiddleware();\n\nconst middleware = [epicMiddleware];\n\nexport default function initializeStore() {\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware,\n  });\n\n  epicMiddleware.run(rootEpic);\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store()}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}